@model BlindBidding.Models.HomeViewModels.IndexViewModel

@{ 
    ViewData["Title"] = "Lista Aukcji";
}

@*<script>
    window.addEventListener("load", function () {

        var height = parseInt($(window).height() / 4);

        $(".item-in-list").height(height);

        $(window).resize(function () {

            height = parseInt($(window).height() / 4);

            $(".item-in-list").height(height);
        });

    }, false);
</script>*@

<div class="row">
    <form asp-controller="Home" asp-action="Index" method="get" id="index-form">
        <div class="col-sm-3 col-xs-12" style="padding-top: 15px;">
           
            <label>Wyszukiwana fraza:</label>
            <input type="text" class="form-control" name="filter" placeholder="Wyszukaj..." value="@Model.Filter">
            <br />
            <label>Kategoria:</label>
               <select name="category" class="form-control">
                @foreach (var i in Model.Categories)
                {
                    @if (i.SubcategoryOf == null)
                    {
                        <optgroup label="@i.Name">
                            @foreach (var j in Model.Categories)
                            {
                                @if (j.SubcategoryOf == i)
                                {
                                    @if(j.Name.Equals(Model.Category))
                                    {

                                        <option value="@j.Name" selected>@j.Name</option>
                                    }
                                    else
                                    { <option value="@j.Name">@j.Name</option>}
                                }
                            }
                        </optgroup>
                    }
                }
            </select>
            <br />
            <label>Elementów na stronie:</label>
            <select name="onPage" class="form-control">
                @{ List<int> onPageValue = new List<int>();
            onPageValue.Add(10); onPageValue.Add(20);
            onPageValue.Add(50); onPageValue.Add(1);}
                @foreach (var i in onPageValue)
        {
            @if (i.Equals(Convert.ToInt32(Model.OnPage)))
    {
        <option value="@i" selected>@i</option>
}
else
{
        <option value="@i">@i</option>
}
}
            </select>
            <br />
            <label>Porządek sortowania:</label>
            <select name="sortingOrder" class="form-control">
                @{ List<string> sortOrder = new List<string>();
            sortOrder.Add("Rosnąco"); sortOrder.Add("Malejąco");}
                @foreach (var i in sortOrder)
        {
            @if (i.Equals(Convert.ToString(Model.SortOrder)))
    {
        <option value="@i" selected>@i</option>
}
else
{
        <option value="@i">@i</option>
}
}
            </select>
            <br />
            <label>Sortuj według:</label>
            <select name="sortingExpression" class="form-control">
                @{ List<string> sortBy = new List<string>();
            sortBy.Add("Data Zakończenia"); sortBy.Add("Data Dodania");}
                @foreach (var i in sortBy)
        {
            @if (i.Equals(Convert.ToString(Model.SortingExpression)))
    {
        <option value="@i" selected>@i</option>
}
else
{
        <option value="@i">@i</option>
}
}
            </select>
            <br />
            <button class="btn btn-primary">Filtruj</button>
            <br>
        </div>
    </form>
    @if (ViewData["Logout"] != null)
    {
        @if (ViewData["Logout"].Equals("Wylogowanie powiodło się."))
        {
            <div class="col-sm-9 col-xs-12" style="margin-top: 25px">
                <div class="alert alert-info" role="alert">
                    @ViewData["Logout"]
                </div>
            </div>

        }

    }
    <div class="col-sm-9 col-xs-12">
        <h3>@ViewData["Title"]</h3>
    </div>
    <div class="col-sm-9 col-xs-12">
        @if (Model.Auctions != null)
        {
            @if (Model.Auctions.Count() > 0)
            {
                @foreach (var i in Model.Auctions)
                {
                    if (!i.IsEnded)
                    {
                        <div id="auctionNum_@i.AuctionId" class="row auction-in-list">
                            @if(i.IsHighlighted)
                            {
                            <script>
                                    window.addEventListener("load", function () {
                                        $('#auctionNum_@i.AuctionId').css("background-color","yellow");
                                    }, false);
                            </script>

                            }
                            <div class="items-list-auction-description col-sm-3 col-xs-12">
                                <form method="get">
                                    <input name="id" value="@i.AuctionId" asp-controller="Auction" asp-action="AuctionView" type="image" src="~/images/auctionThumbnails/@i.ThumbnailPath" class="img-responsive item-in-list" />
                                </form>
                            </div>
                            <div class="col-sm-6 col-xs-12" style="font-size: smaller">
                                <h4>@i.Title</h4>
                                @i.Description
                            </div>
                            <div class="col-sm-3 col-xs-12">
                                <br>
                                <h5>Data zakończenia:</h5>
                                @if (i.IsEnded)
    {
                            <strong style="font-size: larger;">Zakończono</strong>

}
else
{
                            @i.EndDate

}

                                <br>
                                <form method="get">
                                    <button asp-controller="Auction" asp-action="AuctionView" name="id" value="@i.AuctionId" class="btn btn-info" style="margin-top: 5px">Szczegóły</button>
                                </form>
                                @if (Model.LogedUser != null)
                                {
                                    bool check = true;
                                    bool canDeleteFromFavourites = false;
                                    @foreach(var j in Model.UserFavouriteAuctions)
                                    {
                                        @if(j.Equals(i))
                                        {
                                            @foreach(var k in Model.Favourites)
                                            {
                                                @if(k.AuctionId.Equals(j.AuctionId))
                                                {
                                                    @if(k.IsFavourite)
                                                    {
                                                        canDeleteFromFavourites = true;

                                                    }

                                                }

                                            }
                                            check = false;

                                        }

                                    }
                                    @if(check)
                                    {
                                        <form method="get">
                                            <button asp-controller="Auction" asp-action="AddToFavourites" name="AuctionId" value="@i.AuctionId" class="btn btn-default" style="margin-top: 5px">Obserwuj <span style="color: orange" class="glyphicon glyphicon-star"></span></button>
                                        </form>

                                    }
                                    else if(canDeleteFromFavourites)
                                    {

                                        <form method="get">
                                            <button asp-controller="Auction" asp-action="DeleteFromFavourites" name="AuctionId" value="@i.AuctionId" class="btn btn-default" style="margin-top: 5px">Obserwuj <span style="color: red" class="glyphicon glyphicon-remove"></span></button>
                                        </form>
                                    }

                                }
                            </div>
                        </div>

                    }

                }

            }
            else
            {
                <div class="alert alert-info" role="alert">
                    Brak elementów do wyświetlenia
                </div>
            }

        }

    </div>
    <div class="col-xs-12" style="text-align: center">
        @{ var numberOfElements = Model.NumberOfElements;
        var numberOfPages = Model.NumberOfPages;
        //if (numberOfElements % Model.OnPage != 0)
        //{
        //    numberOfPages += 1;
        //}
        var next = Model.Page + 1;
        var prev = Model.Page - 1;
        if (next > numberOfPages)
        {
            next = numberOfPages;

        }
        if (prev < 1)
        {
            prev = 1;

        }
        }



        <ul class="pagination">
            <li><button class="btn btn-default" name="page" value="@prev" form="index-form">Poprzednia</button></li>
            <li><button class="btn btn-default" name="page" value="1" form="index-form">Pierwsza</button></li>
            @for (int i = 1; i <= numberOfPages; i++)
        {
            @if (i > Model.Page - 3 && i < Model.Page + 3)
        {
            @if (i <= Model.NumberOfPages)
        {

            @if (i.Equals(Model.Page))
        {
            <li><button class="btn btn-primary" name="page" value="@i" form="index-form">@i</button></li>

    }
    else
    {
        <li><button class="btn btn-default" name="page" value="@i" form="index-form">@i</button></li>
}
    }

    }

    }
            <li><button class="btn btn-default" name="page" value="@numberOfPages" form="index-form">Ostatnia</button></li>
            <li><button class="btn btn-default" name="page" value="@next" form="index-form">Następna</button></li>
        </ul>
    </div>
</div>